{"version":3,"sources":["../Mcanvas.js"],"names":["Mcanvas2d","canObj","opts","width","height","canvas","ctx","getContext","x","parseInt","y","radius","style","cssText","percent","lineWidth","lineBgColor","lineColor","startPosition","colorType","offsetRadium","Math","PI","beginPath","strokeStyle","arc","_stroke","tmpStyleColor","radialGradientArr","radial","createRadialGradient","Array","i","length","addColorStop","text","color","font","textAlign","textBaseline","fillStyle","fillText","stroke","closePath","restore"],"mappings":"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","file":"Mcanvas.js","sourcesContent":["/**\r\n * Created by 苗高林 on 2016/12/23.\r\n */\r\nclass Mcanvas2d {\r\n    /**\r\n     * 初始化画布\r\n     * @param canObj canvans的js元素对象\r\n     * @param opts 画布设置参数对象\r\n     * opts = {\r\n     * width: \"画布宽度\",\r\n     * height: \"画布高度\"\r\n     * }\r\n     */\r\n    constructor(canObj,opts){\r\n        opts || (opts = {});\r\n        this.width = opts.width || '100';\r\n        this.height = opts.height || '100';\r\n        this.canvas = canObj;\r\n        this.canvas.width = this.width;\r\n        this.canvas.height = this.height;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        //画布中心坐标\r\n        this.x = parseInt( this.width/2 );\r\n        this.y = parseInt( this.height/2 );\r\n        //计算最小半径\r\n        if(this.width > this.height){\r\n            this.radius = parseInt( this.height/2 );\r\n        }else{\r\n            this.radius = parseInt( this.width/2 );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 画圆弧\r\n     * @param opts\r\n     * opts = {\r\n     * x : \"圆弧圆心横坐标\",\r\n     * y : \"圆弧圆心纵坐标\",\r\n     * percent: \"弧度百分比，例如：0.1，0.3，1\",\r\n     * lineWidth: \"线条宽度(默认，1)\",\r\n     * startPosition: \"线条起始位置，备注： top(默认), right, bottom, left\",\r\n     * lineBgColor: \"背景线条颜色,(默认，#eee)\",\r\n     * lineColor: \"绘制主线条颜色,(默认, #ffb432)\",\r\n     * radialGradientArr:\"径向渐变，[[offset, color], [offset, color], [offset, color]]\",\r\n     * colorType: \"线条颜色类型，1(默认)，实色，2，径向渐变色\",\r\n     * radius: \"圆环半径\"\r\n     * }\r\n     */\r\n    drawLoop(opts){\r\n        //圆形画布\r\n        this.canvas.style.cssText = \"border-radius: 100%\";\r\n        opts || (opts = {});\r\n        let x = opts.x || opts.x === 0 ? opts.x : this.x,\r\n            y = opts.y || opts.y === 0 ? opts.y : this.y,\r\n            percent = opts.percent || opts.percent === 0 ? opts.percent : 1,\r\n            lineWidth = opts.lineWidth ? opts.lineWidth : 1,\r\n            radius = opts.radius ? opts.radius : this.radius,\r\n            lineBgColor = opts.lineBgColor ? opts.lineBgColor : '#eee',\r\n            lineColor = opts.lineColor ? opts.lineColor : '#ffb432',\r\n            startPosition = opts.startPosition ? opts.startPosition : 'top',\r\n            colorType = opts.colorType ? opts.colorType : 1;\r\n        //校正半径，保证圆环在画布中\r\n        radius -= lineWidth/2;\r\n        let offsetRadium;//偏移弧度\r\n        if(startPosition == 'top'){\r\n            offsetRadium = -Math.PI/2;\r\n        }else if(startPosition == 'right'){\r\n            offsetRadium = 0;\r\n        }else if(startPosition == 'bottom'){\r\n            offsetRadium = Math.PI/2;\r\n        }else if(startPosition == 'left'){\r\n            offsetRadium = Math.PI;\r\n        }\r\n\r\n        //绘制背景线条\r\n        this.ctx.lineWidth = lineWidth;\r\n        this.ctx.beginPath();\r\n        this.ctx.strokeStyle = lineBgColor;\r\n        this.ctx.arc(x, y, radius, 0, Math.PI * 2, true);\r\n        this._stroke();\r\n\r\n        let tmpStyleColor;\r\n        if(colorType == 1) {//实色（默认）\r\n            tmpStyleColor = lineColor;\r\n        }else if(colorType == 2){//径向渐变\r\n            let radialGradientArr =  opts.radialGradientArr ? opts.radialGradientArr: [[0.9, \"rgb(249,163,12)\"], [1, \"rgb(255,202,110)\"]];\r\n            let radial = this.ctx.createRadialGradient(x, y, 0, x, y, radius);\r\n\r\n            if(radialGradientArr instanceof Array){\r\n                for(let i = 0; i < radialGradientArr.length; i++){\r\n                    radial.addColorStop(radialGradientArr[i][0], radialGradientArr[i][1]);\r\n                }\r\n            }else{\r\n                throw \"radialGradientArr类型不正确，应为: [[offset, color], [offset, color], [offset, color]]r\"\r\n            }\r\n\r\n\r\n\r\n            tmpStyleColor = radial;\r\n        }\r\n        this.ctx.strokeStyle = tmpStyleColor;\r\n        this.ctx.arc(x, y, radius, offsetRadium, Math.PI*2 * percent + offsetRadium , false); // 绘制\r\n        this._stroke();\r\n    }\r\n\r\n    /**\r\n     * 填充文本\r\n     * @param text 文本内容\r\n     * @param opts\r\n     * opts={\r\n     *  color: \"文本颜色(默认，black)\",\r\n     *  font: \"字体样式(默认，16px Arial)\",\r\n     *  x: \"文本横向位置（默认，在画布水平居中）\",\r\n     *  y: \"文本纵向位置（默认，在画布垂直居中）\",\r\n     *  textAlign: \"绘制文本时的当前文本水平基线，(默认, center)\"\r\n     *      start\t默认。文本在指定的位置开始。\r\n     *      end\t文本在指定的位置结束。\r\n     *      center\t文本的中心被放置在指定的位置。\r\n     *      left\t文本左对齐。\r\n     *      right\t文本右对齐。\r\n     *  textBaseline: \"绘制文本时的当前文本垂直基线，(默认, middle)\"\r\n     *      值\t描述\r\n     *      alphabetic\t默认。文本基线是普通的字母基线。\r\n     *      top\t文本基线是 em 方框的顶端。。\r\n     *      hanging\t文本基线是悬挂基线。\r\n     *      middle\t文本基线是 em 方框的正中。\r\n     *      ideographic\t文本基线是表意基线。\r\n     *      bottom\t文本基线是 em 方框的底端。\r\n     * }\r\n     */\r\n    drawText(text,opts){\r\n        opts || (opts = {});\r\n        let color = opts.color ? opts.color : 'black',\r\n            font = opts.font ? opts.font : '16px Arial',\r\n            x = opts.x || opts.x === 0 ? opts.x : this.x,\r\n            y = opts.y || opts.y === 0 ? opts.y : this.y,\r\n            textAlign = opts.textAlign ? opts.textAlign : 'center',\r\n            textBaseline = opts.textBaseline ? opts.textBaseline : 'middle';\r\n\r\n        this.ctx.fillStyle = color; //设置字体颜色\r\n        this.ctx.font = font; //设置字体大小和字体\r\n\r\n        //绘制字体，并且指定位置\r\n        this.ctx.textAlign = textAlign;\r\n        this.ctx.textBaseline = textBaseline;\r\n\r\n        this.ctx.fillText(text, x, y, this.width);\r\n    }\r\n\r\n    /**\r\n     * 使用更优化的定时器，requestAnimationFrame（兼容setTimeout）\r\n     * @param callback\r\n     */\r\n    /*\r\n    drawFrame(num, offset){\r\n        let startObj, clearObj, i;\r\n\r\n        if (window.requestAnimationFrame) {\r\n            startObj = requestAnimationFrame;\r\n            clearObj = cancelAnimationFrame;\r\n            startObj(this.drawFrame);\r\n        } else {\r\n            startObj = setTimeout;\r\n            clearObj = clearTimeout;\r\n            startObj(this.drawFrame,100);\r\n        }\r\n\r\n        i += offset;\r\n        if( i > num){\r\n            clearObj(startObj);\r\n        }\r\n    }\r\n    */\r\n\r\n\r\n    /**\r\n     * 重置stroke\r\n     */\r\n    _stroke(){\r\n        this.ctx.stroke();\r\n        this.ctx.closePath();\r\n        this.ctx.restore();\r\n        //绘制主线条\r\n        this.ctx.beginPath();\r\n    }\r\n}"]}